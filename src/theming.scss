@use 'sass:map';
@use '@angular/material' as mat;
@use 'theme-colors' as tc;

@use 'app/room/command/command.component.theme' as command;

@mixin theme-overrides($light-or-dark) {
  @include command.component-theme($light-or-dark);

  @if $light-or-dark == light {
    @include theme-overrides-light();
  } @else {
    @include theme-overrides-dark();
  }
}

@mixin theme-overrides-light() {
  @include mat.toolbar-overrides((
    container-background-color: map.get(tc.$secondary-palette, 90),
  ));
  @include mat.sidenav-overrides((
    content-background-color: map.get(tc.$secondary-palette, 90),
    container-background-color: map.get(tc.$secondary-palette, 90),
  ));
  @include mat.expansion-overrides((
    container-background-color: map.get(tc.$primary-palette, 95),
  ));

  .mat-drawer-content > router-outlet + * {
    background-color: map.get(tc.$primary-palette, 98);
  }

  .tertiary-light-bg {
    background-color: map.get(tc.$tertiary-palette, 80);
    box-shadow: 0 2px 4px -1px rgba(map.get(tc.$tertiary-palette, 20), 0.25),
    0 4px 5px 0 rgba(map.get(tc.$tertiary-palette, 30), 0.14),
    0 1px 10px 0 rgba(map.get(tc.$tertiary-palette, 35), 0.12);
  }
}

@mixin theme-overrides-dark() {
  @include mat.toolbar-overrides((
    container-background-color: map.get(tc.$primary-palette, 30),
  ));
  @include mat.sidenav-overrides((
    content-background-color: map.get(tc.$primary-palette, 30),
    container-background-color: map.get(tc.$primary-palette, 30),
  ));
  @include mat.expansion-overrides((
    container-background-color: map.get(tc.$neutral-palette, 17),
  ));

  .mat-drawer-content > router-outlet + * {
    background-color: map.get(tc.$neutral-palette, 6);
  }

  .tertiary-light-bg {
    background-color: map.get(tc.$tertiary-palette, 40);
    box-shadow: 0 2px 4px -1px rgba(map.get(tc.$tertiary-palette, 10), 0.25),
    0 4px 5px 0 rgba(map.get(tc.$tertiary-palette, 20), 0.14),
    0 1px 10px 0 rgba(map.get(tc.$tertiary-palette, 35), 0.12);
  }
}
